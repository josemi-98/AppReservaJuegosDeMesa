<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony.Component.Form.Form' => 0,
'IteratorAggregate' => 1,
'Symfony.Component.Form.FormInterface' => 2,
'Symfony.Component.Form.ClearableErrorsInterface' => 3,
'Traversable' => 4,
'Countable' => 5,
'ArrayAccess' => 6,
'App.Entity.Juego' => 7,
'Stringable' => 8,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form')),
        ],
        null,
        [
            'stdClass' => [
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[1],
                        ],
                        'Form' => [
                            $o[1],
                        ],
                    ],
                ],
                'traversalStrategy' => [
                    2,
                ],
                'name' => [
                    'Symfony\\Component\\Form\\Form',
                ],
                'defaultGroup' => [
                    'Form',
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Form',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'IteratorAggregate',
                ],
                'defaultGroup' => [
                    'IteratorAggregate',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\FormInterface',
                ],
                'defaultGroup' => [
                    'FormInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\ClearableErrorsInterface',
                ],
                'defaultGroup' => [
                    'ClearableErrorsInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Traversable',
                ],
                'defaultGroup' => [
                    'Traversable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Countable',
                ],
                'defaultGroup' => [
                    'Countable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ArrayAccess',
                ],
                'defaultGroup' => [
                    'ArrayAccess',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Juego',
                    'nombre',
                    5 => 'ancho',
                    8 => 'alto',
                    11 => 'min_person',
                    14 => 'max_person',
                ],
                'defaultGroup' => [
                    'Juego',
                ],
                'members' => [
                    [
                        'nombre' => [
                            $o[1],
                        ],
                        'ancho' => [
                            $o[5],
                        ],
                        'alto' => [
                            $o[8],
                        ],
                        'min_person' => [
                            $o[11],
                        ],
                        'max_person' => [
                            $o[14],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'nombre' => $o[1],
                        'ancho' => $o[5],
                        'alto' => $o[8],
                        'min_person' => $o[11],
                        'max_person' => $o[14],
                    ],
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                        $o[10],
                    ],
                    11 => [
                        $o[12],
                        $o[13],
                    ],
                    14 => [
                        $o[15],
                        $o[16],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                        'Juego' => [
                            $o[2],
                            $o[3],
                            $o[4],
                        ],
                    ],
                    5 => [
                        'Default' => [
                            $o[6],
                            $o[7],
                        ],
                        'Juego' => [
                            $o[6],
                            $o[7],
                        ],
                    ],
                    8 => [
                        'Default' => [
                            $o[9],
                            $o[10],
                        ],
                        'Juego' => [
                            $o[9],
                            $o[10],
                        ],
                    ],
                    11 => [
                        'Default' => [
                            $o[12],
                            $o[13],
                        ],
                        'Juego' => [
                            $o[12],
                            $o[13],
                        ],
                    ],
                    14 => [
                        'Default' => [
                            $o[15],
                            $o[16],
                        ],
                        'Juego' => [
                            $o[15],
                            $o[16],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'App\\Entity\\Juego',
                    5 => 'App\\Entity\\Juego',
                    8 => 'App\\Entity\\Juego',
                    11 => 'App\\Entity\\Juego',
                    14 => 'App\\Entity\\Juego',
                ],
                'property' => [
                    1 => 'nombre',
                    5 => 'ancho',
                    8 => 'alto',
                    11 => 'min_person',
                    14 => 'max_person',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Juego',
                    ],
                    [
                        'Default',
                        'Juego',
                    ],
                    [
                        'Default',
                        'Juego',
                    ],
                    6 => [
                        'Default',
                        'Juego',
                    ],
                    [
                        'Default',
                        'Juego',
                    ],
                    9 => [
                        'Default',
                        'Juego',
                    ],
                    [
                        'Default',
                        'Juego',
                    ],
                    12 => [
                        'Default',
                        'Juego',
                    ],
                    [
                        'Default',
                        'Juego',
                    ],
                    15 => [
                        'Default',
                        'Juego',
                    ],
                    [
                        'Default',
                        'Juego',
                    ],
                ],
                'message' => [
                    4 => 'El atributo nombre: {{ value }} no es valido si no tiene  {{ type }}.',
                ],
                'type' => [
                    4 => 'string',
                ],
                'maxMessage' => [
                    7 => 'Este campo tiene que tener como maximo {{ limit }} numeros',
                    10 => 'Este campo tiene que tener como maximo {{ limit }} numeros',
                    13 => 'Este campo tiene que tener como maximo {{ limit }} numeros',
                    16 => 'Este campo tiene que tener como maximo {{ limit }} numeros',
                ],
                'minMessage' => [
                    7 => 'Este campo tiene que tener como minimo {{ limit }} numeros',
                    10 => 'Este campo tiene que tener como minimo {{ limit }} numeros',
                    13 => 'Este campo tiene que tener como minimo {{ limit }} numeros',
                    16 => 'Este campo tiene que tener como minimo {{ limit }} numeros',
                ],
                'max' => [
                    7 => 4,
                    10 => 4,
                    13 => 2,
                    16 => 2,
                ],
                'min' => [
                    7 => 2,
                    10 => 2,
                    13 => 1,
                    16 => 1,
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Stringable',
                ],
                'defaultGroup' => [
                    'Stringable',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
